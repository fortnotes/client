{"version":3,"sources":["webpack:///webpack/bootstrap 3ea0d5aa1a5b1c3d5af8","webpack:///./js/test.js","webpack:///./~/emitter/index.js","webpack:///./~/model/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;;AAEA;AACA;;;;;;;;;;ACHA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;AACA;AACA,mCAAgC,MAAM;AACtC,mCAAgC;AAChC;AACA;AACA,4BAAyB;AACzB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA,mDAAgD,MAAM;AACtD;AACA,mDAAgD,MAAM;AACtD;AACA;AACA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE;;AAEA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAG;AACH,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA,yBAAsB,2BAA2B,8BAA8B;AAC/E;AACA;AACA;;AAEA;AACA,qCAAkC,gCAAgC;AAClE,4CAAyC,8BAA8B;AACvE,kDAA+C,4BAA4B;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE,qEAAkE,8BAA8B;AAChG;;AAEA;AACA;AACA;AACA,oFAAiF,wBAAwB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAqF,6BAA6B;AAClH;;AAEA;AACA;AACA;AACA;AACA,MAAG;AACH;AACA,+CAA4C,8BAA8B;AAC1E;;AAEA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,0BAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,+BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAgC,gCAAgC;AAChE,4DAAyD,6BAA6B;AACtF;;AAEA;AACA;AACA;AACA,qCAAkC,0BAA0B;AAC5D;;AAEA,kBAAe,kBAAkB;AACjC;AACA,+CAA4C,mCAAmC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;ACpOA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,SAAS;AAC3B;AACA;AACA;AACA,4DAAyD,yBAAyB;AAClF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAuB,WAAW;AAClC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,WAAW;AACjC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,EAAE;AACd;AACA;AACA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,EAAE;AACb,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,kBAAe;;AAEf;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA,iBAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,QAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,OAAI,UAAU,gBAAgB;AAC9B;AACA;;;AAGA;AACA","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3ea0d5aa1a5b1c3d5af8\n **/","'use strict';\n\n//var Emitter = require('emitter');\nvar Model = require('model');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/test.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n */\nfunction Emitter () {\n\t/**\n\t * Inner hash table for event names and linked callbacks.\n\t * Manual editing should be avoided.\n\t *\n\t * @member {Object.<string, function[]>}\n\t *\n\t * @example\n\t * {\n\t *     click: [\n\t *         function click1 () { ... },\n\t *         function click2 () { ... }\n\t *     ],\n\t *     keydown: [\n\t *         function () { ... }\n\t *     ]\n\t * }\n\t **/\n\tthis.events = {};\n}\n\n\nEmitter.prototype = {\n\t/**\n\t * Bind an event to the given callback function.\n\t * The same callback function can be added multiple times for the same event name.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListener('click', function ( data ) { ... });\n\t * // one more click handler\n\t * obj.addListener('click', function ( data ) { ... });\n\t */\n\taddListener: function ( name, callback ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t}\n\n\t\t// initialization may be required\n\t\tthis.events[name] = this.events[name] || [];\n\t\t// append this new event to the list\n\t\tthis.events[name].push(callback);\n\t},\n\n\n\t/**\n\t * Add a one time listener for the event.\n\t * This listener is invoked only the next time the event is fired, after which it is removed.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t */\n\tonce: function ( name, callback ) {\n\t\t// current execution context\n\t\tvar self = this;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t}\n\n\t\t// initialization may be required\n\t\tthis.events[name] = this.events[name] || [];\n\t\t// append this new event to the list\n\t\tthis.events[name].push(function onceWrapper ( data ) {\n\t\t\tcallback(data);\n\t\t\tself.removeListener(name, onceWrapper);\n\t\t});\n\t},\n\n\n\t/**\n\t * Apply multiple listeners at once.\n\t *\n\t * @param {Object} callbacks event names with callbacks\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListeners({click: function ( data ) {}, close: function ( data ) {}});\n\t */\n\taddListeners: function ( callbacks ) {\n\t\tvar name;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 1 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof callbacks !== 'object' ) { throw 'wrong callbacks type'; }\n\t\t\tif ( Object.keys(callbacks).length === 0 ) { throw 'no callbacks given'; }\n\t\t}\n\n\t\t// valid input\n\t\tif ( typeof callbacks === 'object' ) {\n\t\t\tfor ( name in callbacks ) {\n\t\t\t\tif ( callbacks.hasOwnProperty(name) ) {\n\t\t\t\t\tthis.addListener(name, callbacks[name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all instances of the given callback.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to remove\n\t *\n\t * @example\n\t * obj.removeListener('click', func1);\n\t */\n\tremoveListener: function ( name, callback ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t\tif ( this.events[name] && !Array.isArray(this.events[name]) ) { throw 'corrupted inner data'; }\n\t\t}\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( this.events[name] !== undefined ) {\n\t\t\t// rework the callback list to exclude the given one\n\t\t\tthis.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n\t\t\t// event has no more callbacks so clean it\n\t\t\tif ( this.events[name].length === 0 ) {\n\t\t\t\t// as if there were no listeners at all\n\t\t\t\tthis.events[name] = undefined;\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all callbacks for the given event name.\n\t * Without event name clears all events.\n\t *\n\t * @param {string} [name] event identifier\n\t *\n\t * @example\n\t * obj.removeAllListeners('click');\n\t * obj.removeAllListeners();\n\t */\n\tremoveAllListeners: function ( name ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) { throw 'wrong or empty name'; }\n\t\t}\n\n\t\t// check input\n\t\tif ( arguments.length === 0 ) {\n\t\t\t// no arguments so remove everything\n\t\t\tthis.events = {};\n\t\t} else if ( name ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( this.events[name] !== undefined ) { throw 'event is not removed'; }\n\t\t\t}\n\n\t\t\t// only name is given so remove all callbacks for the given event\n\t\t\t// but object structure modification should be avoided\n\t\t\tthis.events[name] = undefined;\n\t\t}\n\t},\n\n\n\t/**\n\t * Execute each of the listeners in the given order with the supplied arguments.\n\t *\n\t * @param {string} name event identifier\n\t * @param {Object} [data] options to send\n\t *\n\t * @todo consider use context\n\t *\n\t * @example\n\t * obj.emit('init');\n\t * obj.emit('click', {src:panel1, dst:panel2});\n\t *\n\t * // it's a good idea to emit event only when there are some listeners\n\t * if ( this.events['click'] !== undefined ) {\n\t *     this.emit('click', {event: event});\n\t * }\n\t */\n\temit: function ( name, data ) {\n\t\tvar event = this.events[name],\n\t\t\ti;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length < 1 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t}\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( event !== undefined ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( !Array.isArray(event) ) { throw 'wrong event type'; }\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < event.length; i++ ) {\n\t\t\t\tif ( DEBUG ) {\n\t\t\t\t\tif ( typeof event[i] !== 'function' ) { throw 'wrong event callback type'; }\n\t\t\t\t}\n\n\t\t\t\t// invoke the callback with parameters\n\t\t\t\t// http://jsperf.com/function-calls-direct-vs-apply-vs-call-vs-bind/6\n\t\t\t\tevent[i].call(this, data);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n// public\nmodule.exports = Emitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/emitter/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Emitter = require('emitter');\n\n\n/**\n * Base model implementation.\n *\n * Represents domain-specific data or information that an application will be working with.\n * A typical example is a user account (e.g name, avatar, e-mail) or a music track (e.g title, year, album).\n * Holds information, but don’t handle behaviour and don’t format information or influence how data appears.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [data={}] init attributes\n */\nfunction Model ( data ) {\n\tif ( DEBUG ) {\n\t\tif ( data !== undefined && typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// parent init\n\tEmitter.call(this);\n\n\t/**\n\t * Model attributes with given data or empty hash table.\n\t *\n\t * @member {Object.<string, *>}\n\t **/\n\tthis.data = data || {};\n}\n\n\n// inheritance\nModel.prototype = Object.create(Emitter.prototype);\nModel.prototype.constructor = Model;\n\n\n// which of data fields is primary\nModel.prototype.idName = 'id';\n\n\n/**\n * Remove all attributes from the model.\n *\n * @return {boolean} operation status\n *\n * @fires Model#clear\n */\nModel.prototype.clear = function () {\n\tvar data = this.data;\n\n\tif ( DEBUG ) {\n\t\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// is there any data?\n\tif ( Object.keys(data).length > 0 ) {\n\t\t// reset\n\t\tthis.data = {};\n\n\t\t// there are some listeners\n\t\tif ( this.events['clear'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('clear', {data: data});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Clear and set model data.\n *\n * @param {Object} data attributes\n * @return {boolean} operation status\n *\n * @fires Model#clear\n * @fires Model#init\n */\nModel.prototype.init = function ( data ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// valid input\n\tif ( data ) {\n\t\t// reset data\n\t\tthis.clear();\n\n\t\t// init with given data\n\t\tthis.data = data;\n\n\t\t// there are some listeners\n\t\tif ( this.events['init'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('init', {data: data});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Check an attribute existence.\n *\n * @param {string} name attribute\n *\n * @return {boolean} attribute exists or not\n */\nModel.prototype.has = function ( name ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\t// hasOwnProperty method is not available directly in case of Object.create(null)\n\t//return Object.hasOwnProperty.call(this.data, name);\n\treturn this.data.hasOwnProperty(name);\n};\n\n/**\n * Get the model attribute by name.\n *\n * @param {string} name attribute\n *\n * @return {*} associated value\n */\nModel.prototype.get = function ( name ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\treturn this.data[name];\n};\n\n\n/**\n * Update or create a model attribute.\n *\n * @param {string} name attribute\n * @param {*} value associated value\n * @return {boolean} operation status (true - attribute value was changed/created)\n *\n * @fires Model#change\n */\nModel.prototype.set = function ( name, value ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData  = {name: name, curr: value};\n\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\tif ( isAttrSet ) {\n\t\t// update\n\t\temitData.prev = this.data[name];\n\t\t// only if values are different\n\t\tif ( value !== emitData.prev ) {\n\t\t\tthis.data[name] = value;\n\n\t\t\t// there are some listeners\n\t\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t\t// notify listeners\n\t\t\t\tthis.emit('change', emitData);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\t// create\n\t\tthis.data[name] = value;\n\n\t\t// there are some listeners\n\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('change', emitData);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Delete the given attribute by name.\n *\n * @param {string} name attribute\n * @return {boolean} operation status (true - attribute was deleted)\n *\n * @fires Model#change\n */\nModel.prototype.unset = function ( name ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData;\n\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\tif ( isAttrSet ) {\n\t\temitData = {name: name, prev: this.data[name]};\n\t\tdelete this.data[name];\n\n\t\t// there are some listeners\n\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('change', emitData);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n///**\n// * Prepare all data for sending to a server\n// * @return {Object}\n// */\n//Model.prototype.pack = function () {\n//\treturn this._data;\n//};\n//\n//\n///**\n// * Restores the received data from a server to a model data\n// * @param {Object} data\n// * @return {Object}\n// */\n//Model.prototype.unpack = function ( data ) {\n//\treturn data;\n//};\n//\n//\n///**\n// * Sync model to a server\n// */\n//Model.prototype.save = function () {\n//\tvar self = this;\n//\n//\tif ( this.url ) {\n//\t\t// collect data\n//\t\tio.ajax(this.url, {\n//\t\t\t// request params\n//\t\t\tmethod: self._data[self.idName] ? 'put' : 'post',\n//\t\t\tdata  : self.pack(),\n//\t\t\tonload: function( data ) {\n//\t\t\t\tdata = self.unpack(self.parse(data));\n//\t\t\t\tself.attributes(data);\n//\t\t\t\tconsole.log(data);\n//\t\t\t\tself.emit('save', true);\n//\t\t\t},\n//\t\t\t// error handlers\n//\t\t\tonerror:   this.saveFailure,\n//\t\t\tontimeout: this.saveFailure\n//\t\t});\n//\t}\n//};\n//\n//\n///**\n// * Error handler while model data fetch\n// */\n//Model.prototype.saveFailure = function () {\n//\tthis.emit('save', false);\n//};\n//\n//\n///**\n// * Converts received data from a server to a model attributes\n// * @param {String} response\n// * @return {Object}\n// */\n//Model.prototype.parse = function ( response ) {\n//\tvar data = {};\n//\n//\ttry {\n//\t\tdata = JSON.parse(response).data;\n//\t} catch(e){ console.log(e); }\n//\treturn data;\n//};\n\n\n// public export\nmodule.exports = Model;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/model/index.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}