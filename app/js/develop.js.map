{"version":3,"sources":["webpack:///webpack/bootstrap 2c7385880a8083bf85e7","webpack:///./js/develop.js","webpack:///./js/lib/component.js","webpack:///./js/lib/emitter.js","webpack:///./js/lib/router.js","webpack:///./js/lib/ui/page.js","webpack:///./js/lib/app.js","webpack:///./js/lib/dom.js","webpack:///./js/lib/model.js","webpack:///./js/lib/ui/button.js","webpack:///./js/lib/ui/panel.js","webpack:///./js/main.js","webpack:///./js/pages/account.js","webpack:///./js/pages/init.js","webpack:///./js/pages/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAC;;AAED;AACA;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,WAAW;AAC7B,cAAW,QAAQ;AACnB,cAAW,QAAQ;AACnB,cAAW,QAAQ;AACnB,cAAW,QAAQ;AACnB,cAAW,UAAU;AACrB,cAAW,kBAAkB;AAC7B,cAAW,0BAA0B,kBAAkB;AACvD,cAAW,QAAQ;AACnB,cAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAA+B;AAC/B;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAW;AACX;AACA;;;AAGA;AACA;;AAEA;AACA,wCAAqC,2BAA2B;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iDAA8C,iCAAiC;AAC/E;AACA;AACA;AACA,KAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAA8C,iCAAiC;AAC/E;AACA;AACA;AACA,KAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAiD,oCAAoC;AACrF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oDAAiD,kCAAkC;AACnF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAiD,gCAAgC;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8CAA2C,oCAAoC;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAc;AACd,qBAAkB,MAAM;AACxB;AACA,2BAAwB,aAAa;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV;AACA,wEAAqE;;;AAGrE;AACA;AACA;AACA,cAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAa,sBAAsB;AACnC;;AAEA;AACA,4CAAyC,0BAA0B;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa;AACb,oBAAiB,UAAU;AAC3B;AACA,wBAAqB,YAAY;AACjC;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,QAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAA+C,gCAAgC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAAyC,0BAA0B;AACnE;;AAEA;AACA,KAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAqB,mBAAmB;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;AC5iBA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;AACA;AACA,mCAAgC,MAAM;AACtC,mCAAgC;AAChC;AACA;AACA,4BAAyB;AACzB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA,mDAAgD,MAAM;AACtD;AACA,mDAAgD,MAAM;AACtD;AACA;AACA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE;;AAEA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAG;AACH,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA,yBAAsB,2BAA2B,8BAA8B;AAC/E;AACA;AACA;;AAEA;AACA,qCAAkC,gCAAgC;AAClE,4CAAyC,8BAA8B;AACvE,kDAA+C,4BAA4B;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAkC,gCAAgC;AAClE,4DAAyD,6BAA6B;AACtF,6CAA0C,6BAA6B;AACvE,qEAAkE,8BAA8B;AAChG;;AAEA;AACA;AACA;AACA,oFAAiF,wBAAwB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAqF,6BAA6B;AAClH;;AAEA;AACA;AACA;AACA;AACA,MAAG;AACH;AACA,+CAA4C,8BAA8B;AAC1E;;AAEA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,0BAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,+BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAgC,gCAAgC;AAChE,4DAAyD,6BAA6B;AACtF;;AAEA;AACA;AACA;AACA,qCAAkC,0BAA0B;AAC5D;;AAEA,kBAAe,kBAAkB;AACjC;AACA,+CAA4C,mCAAmC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;ACpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA,aAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAiC,0BAA0B;AAC3D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAgC,OAAO;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,aAAa;AACnC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,gBAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,SAAS;AACpB;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAW,KAAK;AAChB,cAAW,EAAE;AACb;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,uBAAuB;AAC7C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,KAAK;AAChB;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,WAAW;AACjC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,MAAM;AACjB;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAiD,2BAA2B;AAC5E,oCAAiC,0CAA0C;AAC3E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA0B,2BAA2B;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA2B,2BAA2B;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;AC9WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA,WAAQ;AACR;AACA;AACA;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;ACvFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAc;AACd;;;AAGA;AACA;AACA,aAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAW;AACX,kBAAe,OAAO;AACtB,kBAAe,OAAO;AACtB,kBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;AACF,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA4B,uBAAuB;AACnD;AACA,MAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;AACA,iDAA8C,2CAA2C;AACzF;;AAEA;AACA,gCAA6B,QAAQ;;AAErC;AACA;;AAEA;AACA,2BAAwB,oBAAoB;AAC5C,2BAAwB,oBAAoB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB,cAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA,iDAA8C,2CAA2C;AACzF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,MAAM;AACjB;AACA;AACA,qBAAkB;;AAElB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAG;;;AAGH;AACA;;;;;;;;;;ACrVA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,YAAY;AACvB,cAAW,KAAK;AAChB,eAAY,UAAU;AACtB;AACA;AACA;AACA,uBAAoB;AACpB,sBAAmB,gBAAgB;AACnC,uBAAoB,2DAA2D;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,KAAK;AAChB,eAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,KAAK;AAChB,cAAW,KAAK;AAChB,eAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,QAAQ;AACnB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;ACrKA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,SAAS;AAC3B;AACA;AACA;AACA,4DAAyD,yBAAyB;AAClF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAuB,WAAW;AAClC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,WAAW;AACjC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,EAAE;AACd;AACA;AACA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,EAAE;AACb,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,kBAAe;;AAEf;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAAwC,8BAA8B;AACtE;;AAEA;AACA,iBAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,QAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,OAAI,UAAU,gBAAgB;AAC9B;AACA;;;AAGA;AACA;;;;;;;;;;AC3SA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,WAAW;AAC7B,cAAW,OAAO;AAClB,cAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2EAAwE,oCAAoC;AAC5G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6EAA0E,qCAAqC;AAC/G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAc;AACd,qBAAkB,MAAM;AACxB;AACA,2BAAwB,aAAa;AACrC;AACA;AACA,KAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAG;AACH,KAAE;AACF;;;AAGA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAgB;AAChB;AACA,WAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;AAEF;AACA;AACA;AACA;AACA,KAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAS;AACT;AACA,UAAO;AACP;AACA;AACA;AACA;AACA,UAAO;AACP;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,QAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAI,EAAE;AACN,MAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAoB,mCAAmC;AACvD;AACA;AACA;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAI;AACJ;AACA,KAAE;AACF;AACA;AACA;AACA,KAAE;AACF;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAkB,mCAAmC;;;AAGrD;AACA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAkB,mCAAmC;;;AAGrD;AACA;AACA;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAO;AACP;AACA;AACA;AACA,UAAO;AACP;AACA;AACA;AACA,UAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAO;AACP;AACA,QAAK;AACL,gCAA6B,+CAA+C;AAC5E;AACA;AACA;AACA;AACA;AACA,OAAI;AACJ,IAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA","file":"develop.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2c7385880a8083bf85e7\n **/","/**\n * Main module to setup development environment.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar dom = require('./lib/dom');\n\n//var app     = require('../app'),\n//\tstorage = require('./storage'),\n//\tmetrics = require('cfg/metrics');\n//\n//\n//// export to globals for easy debugging\n//window.app    = app;\n//window.router = require('../router');\n//\n//// set global mode\n//app.data.debug = true;\n//\n//// additional dev modules\n//require('./static');\n//require('./events');\n//require('./debug');\n\n// livereload activation\n// load external script\ndocument.head.appendChild(dom.tag('script', {\n\ttype: 'text/javascript',\n\tsrc: '//' + location.hostname + ':35729/livereload.js'\n}));\n\n// the application itself\nrequire('./main');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/develop.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * @module stb/component\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Emitter = require('./emitter'),\n\trouter  = require('./router'),\n\tcounter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Element} [config.$content] DOM element/fragment to be appended to the $body\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n\t// current execution context\n\tvar self = this;\n\n\t/**\n\t * Component visibility state flag.\n\t *\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tthis.visible = true;\n\n\t/**\n\t * Component can accept focus or not.\n\t *\n\t * @type {boolean}\n\t */\n\tthis.focusable = true;\n\n\t/**\n\t * DOM outer handle.\n\t *\n\t * @type {Element}\n\t */\n\tthis.$node = null;\n\n\t/**\n\t * DOM inner handle.\n\t * In simple cases is the same as $node.\n\t *\n\t * @type {Element}\n\t */\n\tthis.$body = null;\n\n\tif ( DEBUG ) {\n\t\t/**\n\t\t * Link to the page owner component.\n\t\t * It can differ from the direct parent.\n\t\t * Should be used only in debug.\n\t\t *\n\t\t * @type {Page}\n\t\t */\n\t\t//this.page = null;\n\t}\n\n\t/**\n\t * Link to the parent component which has this component as a child.\n\t *\n\t * @type {Component}\n\t */\n\tthis.parent = null;\n\n\t/**\n\t * List of all children components.\n\t *\n\t * @type {Component[]}\n\t */\n\tthis.children = [];\n\n\n\t// sanitize\n\tconfig = config || {};\n\n\tif ( DEBUG ) {\n\t\tif ( typeof config !== 'object' ) { throw 'wrong config type'; }\n\t}\n\n\t// parent init\n\tEmitter.call(this, config.data);\n\n\t// outer handle\n\tif ( config.$node !== undefined ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(config.$node instanceof Element) ) { throw 'wrong config.$node type'; }\n\t\t}\n\t\t// apply\n\t\tthis.$node = config.$node;\n\t} else {\n\t\t// empty div in case nothing is given\n\t\tthis.$node = document.createElement('div');\n\t}\n\n\t// inner handle\n\tif ( config.$body !== undefined ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(config.$body instanceof Element) ) { throw 'wrong config.$body type'; }\n\t\t}\n\t\t// apply\n\t\tthis.$body = config.$body;\n\t} else {\n\t\t// inner and outer handlers are identical\n\t\tthis.$body = this.$node;\n\t}\n\n\t// inject given content into inner component part\n\tif ( config.$content !== undefined ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(config.$content instanceof Element) ) { throw 'wrong config.$content type'; }\n\t\t}\n\t\t// apply\n\t\tthis.$body.appendChild(config.$content);\n\t}\n\n\t// correct CSS class names\n\tthis.$node.classList.add('component');\n\n\t// apply hierarchy\n\tif ( config.parent !== undefined ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(config.parent instanceof Component) ) { throw 'wrong config.parent type'; }\n\t\t}\n\t\t// apply\n\t\tconfig.parent.add(this);\n\t}\n\n\t// set link to the page owner component\n\t//if ( config.page !== undefined ) {\n\t//\tif ( DEBUG ) {\n\t//\t\tif ( !(config.page instanceof Component) ) { throw 'wrong config.page type'; }\n\t//\t}\n    //\t// apply\n\t//\tthis.page = config.page;\n\t//}\n\n\t// apply given visibility\n\tif ( config.visible === false ) {\n\t\t// default state is visible\n\t\tthis.hide();\n\t}\n\n\t// can't accept focus\n\tif ( config.focusable === false ) {\n\t\tthis.focusable = false;\n\t}\n\n\t// apply given events\n\tif ( config.events !== undefined ) {\n\t\t// no need in assert here (it is done inside the addListeners)\n\t\tthis.addListeners(config.events);\n\t}\n\n\t// apply component id if given, generate otherwise\n\tthis.id = config.id || this.$node.id || 'id' + counter++;\n\n\t// apply the given children components\n\tif ( config.children ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !Array.isArray(config.children) ) { throw 'wrong config.children type'; }\n\t\t}\n\t\t// apply\n\t\tthis.add.apply(this, config.children);\n\t}\n\n\t// component activation by mouse\n\tthis.$node.addEventListener('click', function ( event ) {\n\t\t// left mouse button\n\t\tif ( event.button === 0 ) {\n\t\t\t// activate if possible\n\t\t\tself.focus();\n\n\t\t\t// there are some listeners\n\t\t\tif ( self.events['click'] !== undefined ) {\n\t\t\t\t/**\n\t\t\t\t * Mouse click event.\n\t\t\t\t *\n\t\t\t\t * @event module:stb/component~Component#click\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t * @property {Event} event click event data\n\t\t\t\t */\n\t\t\t\tself.emit('click', {event: event});\n\t\t\t}\n\n\t\t\t// not prevented\n\t\t\t//if ( !event.stop ) {\n\t\t\t//\t// activate if possible\n\t\t\t//\tself.focus();\n\t\t\t//}\n\t\t}\n\n\t\tif ( DEBUG ) {\n\t\t\t// middle mouse button\n\t\t\tif ( event.button === 1 ) {\n\t\t\t\tconsole.log(self);\n\t\t\t\tconsole.log('this component is now available by window.link');\n\t\t\t\twindow.link = self;\n\t\t\t}\n\t\t}\n\n\t\tevent.stopPropagation();\n\t});\n\n\tif ( DEBUG ) {\n\t\t// expose a link\n\t\tthis.$node.component = this.$body.component = this;\n\t\tthis.$node.title = 'component ' + this.constructor.name + '.' + this.id + ' (outer)';\n\t\tthis.$body.title = 'component ' + this.constructor.name + '.' + this.id + ' (inner)';\n\t}\n\n\t// @todo remove or implement\n\t// navigation by keyboard\n\t//this.addListener('keydown', this.navigateDefault);\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @todo remove or implement\n *\n * @param {Event} event generated event source of movement\n */\n/*Component.prototype.navigateDefault = function ( event ) {\n\tswitch ( event.code ) {\n\t\tcase keys.up:\n\t\tcase keys.down:\n\t\tcase keys.right:\n\t\tcase keys.left:\n\t\t\t// notify listeners\n\t\t\tthis.emit('overflow');\n\t\t\tbreak;\n\t}\n};*/\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @todo remove or implement\n *\n * @type {function}\n */\n/*Component.prototype.navigate = Component.prototype.navigateDefault;*/\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n\tvar i;\n\n\t// walk through all the given elements\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tchild = arguments[i];\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(child instanceof Component) ) { throw 'wrong child type'; }\n\t\t}\n\n\t\t// apply\n\t\tthis.children.push(child);\n\t\tchild.parent = this;\n\n\t\t//if ( DEBUG ) {\n\t\t//\t// apply page for this and all children recursively\n\t\t//\tchild.setPage(this.page);\n\t\t//}\n\n\t\t// correct DOM parent/child connection if necessary\n\t\tif ( child.$node !== undefined && child.$node.parentNode === null ) {\n\t\t\tthis.$body.appendChild(child.$node);\n\t\t}\n\n\t\t// there are some listeners\n\t\tif ( this.events['add'] !== undefined ) {\n\t\t\t/**\n\t\t\t * A child component is added.\n\t\t\t *\n\t\t\t * @event module:stb/component~Component#add\n\t\t\t *\n\t\t\t * @type {Object}\n\t\t\t * @property {Component} child new component added\n\t\t\t */\n\t\t\tthis.emit('add', {item: child});\n\t\t}\n\n\t\tconsole.log('component ' + this.constructor.name + '.' + this.id + ' new child: ' + child.constructor.name + '.' + child.id);\n\t}\n};\n\n\n//if ( DEBUG ) {\n//\tComponent.prototype.setPage = function ( page ) {\n//\t\tthis.page = page;\n//\n//\t\tthis.children.forEach(function ( child ) {\n//\t\t\tchild.setPage(page);\n//\t\t});\n//\t};\n//}\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n\tvar page = router.current;\n\n\t// really inserted somewhere\n\tif ( this.parent ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(this.parent instanceof Component) ) { throw 'wrong this.parent type'; }\n\t\t}\n\n\t\t// active at the moment\n\t\tif ( page.activeComponent === this ) {\n\t\t\tthis.blur();\n\t\t\tthis.parent.focus();\n\t\t}\n\t\tthis.parent.children.splice(this.parent.children.indexOf(this), 1);\n\t}\n\n\t// remove all children\n\tthis.children.forEach(function ( child ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !(child instanceof Component) ) { throw 'wrong child type'; }\n\t\t}\n\n\t\tchild.remove();\n\t});\n\n\tthis.removeAllListeners();\n\tthis.$node.parentNode.removeChild(this.$node);\n\n\t// there are some listeners\n\tif ( this.events['remove'] !== undefined ) {\n\t\t/**\n\t\t * Delete this component.\n\t\t *\n\t\t * @event module:stb/component~Component#remove\n\t\t */\n\t\tthis.emit('remove');\n\t}\n\n\tconsole.log('component ' + this.constructor.name + '.' + this.id + ' remove', 'red');\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function () {\n\tvar activePage = router.current,\n\t\tactiveItem = activePage.activeComponent;\n\n\t//if ( DEBUG ) {\n\t//\tif ( this.page !== activePage ) {\n\t//\t\tconsole.log(this, this.page, activePage);\n\t//\t\tthrow 'attempt to focus an invisible component';\n\t//\t}\n\t//}\n\n\t// this is a visual component on a page\n\t// not already focused and can accept focus\n\tif ( this.focusable && this !== activeItem ) {\n\t\t// notify the current active component\n\t\tif ( activeItem ) { activeItem.blur(); }\n\n\t\t// apply\n\t\tactivePage.activeComponent = activeItem = this;\n\t\tactiveItem.$node.classList.add('focus');\n\n\t\t// there are some listeners\n\t\tif ( activeItem.events['focus'] !== undefined ) {\n\t\t\t/**\n\t\t\t * Make this component focused.\n\t\t\t *\n\t\t\t * @event module:stb/component~Component#focus\n\t\t\t */\n\t\t\tactiveItem.emit('focus');\n\t\t}\n\n\t\tconsole.log('component ' + this.constructor.name + '.' + this.id + ' focus');\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n\tvar activePage = router.current,\n\t\tactiveItem = activePage.activeComponent;\n\n\t// this is the active component\n\tif ( this === activeItem ) {\n\t\tthis.$node.classList.remove('focus');\n\t\tactivePage.activeComponent = null;\n\n\t\t// there are some listeners\n\t\tif ( this.events['blur'] !== undefined ) {\n\t\t\t/**\n\t\t\t * Remove focus from this component.\n\t\t\t *\n\t\t\t * @event module:stb/component~Component#blur\n\t\t\t */\n\t\t\tthis.emit('blur');\n\t\t}\n\n\t\tconsole.log('component ' + this.constructor.name + '.' + this.id + ' blur', 'grey');\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn false;\n};\n\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function () {\n\t// is it hidden\n\tif ( !this.visible ) {\n\t\t// correct style\n\t\tthis.$node.classList.remove('hidden');\n\t\t// flag\n\t\tthis.visible = true;\n\n\t\t// there are some listeners\n\t\tif ( this.events['show'] !== undefined ) {\n\t\t\t/**\n\t\t\t * Make the component visible.\n\t\t\t *\n\t\t\t * @event module:stb/component~Component#show\n\t\t\t */\n\t\t\tthis.emit('show');\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn true;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function () {\n\t// is it visible\n\tif ( this.visible ) {\n\t\t// correct style\n\t\tthis.$node.classList.add('hidden');\n\t\t// flag\n\t\tthis.visible = false;\n\n\t\t// there are some listeners\n\t\tif ( this.events['hide'] !== undefined ) {\n\t\t\t/**\n\t\t\t * Make the component hidden.\n\t\t\t *\n\t\t\t * @event module:stb/component~Component#hide\n\t\t\t */\n\t\t\tthis.emit('hide');\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn true;\n};\n\n\n// public\nmodule.exports = Component;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/component.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n */\nfunction Emitter () {\n\t/**\n\t * Inner hash table for event names and linked callbacks.\n\t * Manual editing should be avoided.\n\t *\n\t * @member {Object.<string, function[]>}\n\t *\n\t * @example\n\t * {\n\t *     click: [\n\t *         function click1 () { ... },\n\t *         function click2 () { ... }\n\t *     ],\n\t *     keydown: [\n\t *         function () { ... }\n\t *     ]\n\t * }\n\t **/\n\tthis.events = {};\n}\n\n\nEmitter.prototype = {\n\t/**\n\t * Bind an event to the given callback function.\n\t * The same callback function can be added multiple times for the same event name.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListener('click', function ( data ) { ... });\n\t * // one more click handler\n\t * obj.addListener('click', function ( data ) { ... });\n\t */\n\taddListener: function ( name, callback ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t}\n\n\t\t// initialization may be required\n\t\tthis.events[name] = this.events[name] || [];\n\t\t// append this new event to the list\n\t\tthis.events[name].push(callback);\n\t},\n\n\n\t/**\n\t * Add a one time listener for the event.\n\t * This listener is invoked only the next time the event is fired, after which it is removed.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t */\n\tonce: function ( name, callback ) {\n\t\t// current execution context\n\t\tvar self = this;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t}\n\n\t\t// initialization may be required\n\t\tthis.events[name] = this.events[name] || [];\n\t\t// append this new event to the list\n\t\tthis.events[name].push(function onceWrapper ( data ) {\n\t\t\tcallback(data);\n\t\t\tself.removeListener(name, onceWrapper);\n\t\t});\n\t},\n\n\n\t/**\n\t * Apply multiple listeners at once.\n\t *\n\t * @param {Object} callbacks event names with callbacks\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListeners({click: function ( data ) {}, close: function ( data ) {}});\n\t */\n\taddListeners: function ( callbacks ) {\n\t\tvar name;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 1 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof callbacks !== 'object' ) { throw 'wrong callbacks type'; }\n\t\t\tif ( Object.keys(callbacks).length === 0 ) { throw 'no callbacks given'; }\n\t\t}\n\n\t\t// valid input\n\t\tif ( typeof callbacks === 'object' ) {\n\t\t\tfor ( name in callbacks ) {\n\t\t\t\tif ( callbacks.hasOwnProperty(name) ) {\n\t\t\t\t\tthis.addListener(name, callbacks[name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all instances of the given callback.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to remove\n\t *\n\t * @example\n\t * obj.removeListener('click', func1);\n\t */\n\tremoveListener: function ( name, callback ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t\tif ( this.events[name] && !Array.isArray(this.events[name]) ) { throw 'corrupted inner data'; }\n\t\t}\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( this.events[name] !== undefined ) {\n\t\t\t// rework the callback list to exclude the given one\n\t\t\tthis.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n\t\t\t// event has no more callbacks so clean it\n\t\t\tif ( this.events[name].length === 0 ) {\n\t\t\t\t// as if there were no listeners at all\n\t\t\t\tthis.events[name] = undefined;\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all callbacks for the given event name.\n\t * Without event name clears all events.\n\t *\n\t * @param {string} [name] event identifier\n\t *\n\t * @example\n\t * obj.removeAllListeners('click');\n\t * obj.removeAllListeners();\n\t */\n\tremoveAllListeners: function ( name ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) { throw 'wrong or empty name'; }\n\t\t}\n\n\t\t// check input\n\t\tif ( arguments.length === 0 ) {\n\t\t\t// no arguments so remove everything\n\t\t\tthis.events = {};\n\t\t} else if ( name ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( this.events[name] !== undefined ) { throw 'event is not removed'; }\n\t\t\t}\n\n\t\t\t// only name is given so remove all callbacks for the given event\n\t\t\t// but object structure modification should be avoided\n\t\t\tthis.events[name] = undefined;\n\t\t}\n\t},\n\n\n\t/**\n\t * Execute each of the listeners in the given order with the supplied arguments.\n\t *\n\t * @param {string} name event identifier\n\t * @param {Object} [data] options to send\n\t *\n\t * @todo consider use context\n\t *\n\t * @example\n\t * obj.emit('init');\n\t * obj.emit('click', {src:panel1, dst:panel2});\n\t *\n\t * // it's a good idea to emit event only when there are some listeners\n\t * if ( this.events['click'] !== undefined ) {\n\t *     this.emit('click', {event: event});\n\t * }\n\t */\n\temit: function ( name, data ) {\n\t\tvar event = this.events[name],\n\t\t\ti;\n\n\t\tif ( DEBUG ) {\n\t\t\tif ( arguments.length < 1 ) { throw 'wrong arguments number'; }\n\t\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t}\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( event !== undefined ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( !Array.isArray(event) ) { throw 'wrong event type'; }\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < event.length; i++ ) {\n\t\t\t\tif ( DEBUG ) {\n\t\t\t\t\tif ( typeof event[i] !== 'function' ) { throw 'wrong event callback type'; }\n\t\t\t\t}\n\n\t\t\t\t// invoke the callback with parameters\n\t\t\t\t// http://jsperf.com/function-calls-direct-vs-apply-vs-call-vs-bind/6\n\t\t\t\tevent[i].call(this, data);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n// public\nmodule.exports = Emitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/emitter.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Singleton for page navigation with history.\n *\n * All page modules should be in the directory `app/js/pages`.\n * Page module name and the corresponding file name should be the same.\n *\n * Include module to start working:\n *\n * ```js\n * var router = require('./lib/router');\n * ```\n *\n * Init with page modules:\n *\n * ```js\n * router.data([\n *     require('./pages/init'),\n *     require('./pages/main'),\n *     require('./pages/help')\n * ]);\n * ```\n *\n * Each page has its ID. The same ID should be used in HTML.\n *\n * Make some page active/visible by its ID:\n *\n * ```js\n * router.navigate('pageMain');\n * ```\n *\n * This will hide the current page, activate the `pageMain` page and put it in the tail of the history list.\n *\n * All subscribers of the current and `pageMain` page will be notified with `show/hide` events.\n *\n * Also the router emits `navigate` event to all subscribers.\n *\n *\n * To get to the previous active page use:\n *\n * ```js\n * router.back();\n * ```\n *\n * The module also has methods to parse location hash address and serialize it back:\n *\n * ```js\n * router.parse('#pageMain/some/additional/data');\n * router.stringify('pageMain', ['some', 'additional', 'data']);\n * ```\n *\n * Direct modification of the URL address should be avoided.\n * The methods `router.navigate` and `router.back` should be used instead.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Emitter = require('./emitter'),\n\trouter;\n\n\n/**\n * @instance\n * @type {Emitter}\n */\nrouter = new Emitter();\n\n\n/**\n * Current active/visible page.\n *\n * @readonly\n * @type {Page}\n */\nrouter.current = null;\n\n\n/**\n * List of all visited pages.\n *\n * @readonly\n * @type {Page[]}\n */\nrouter.history = [];\n\n\n/**\n * List of all stored pages.\n *\n * @readonly\n * @type {Page[]}\n */\nrouter.pages = [];\n\n\n/**\n * Hash table of all pages ids with links to pages.\n *\n * @readonly\n * @type {Object.<string, Page>}\n */\nrouter.ids = {};\n\n\n/**\n * Clear and fill the router with the given list of pages.\n *\n * @param {Page[]} pages list of pages to add\n * @return {boolean} operation status\n *\n * @fires router#init\n */\nrouter.init = function ( pages ) {\n\tvar i, l, item;\n\n\tif ( pages !== undefined ) {\n\t\tif ( DEBUG ) {\n\t\t\tif ( !Array.isArray(pages) ) { throw 'wrong pages type'; }\n\t\t}\n\n\t\t// reset page list\n\t\tthis.pages = [];\n\n\t\t// apply list\n\t\tthis.pages = pages;\n\n\t\t// extract ids\n\t\tfor ( i = 0, l = pages.length; i < l; i++ ) {\n\t\t\titem = pages[i];\n\t\t\tthis.ids[item.id] = item;\n\n\t\t\t// find the currently active page\n\t\t\tif ( item.active ) {\n\t\t\t\tthis.current = item;\n\t\t\t}\n\t\t}\n\n\t\t// there are some listeners\n\t\tif ( this.events['init'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('init', {pages: pages});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Extract the page name and data from url hash.\n *\n * @param {string} hash address hash part to parse\n *\n * @return {{name: string, data: string[]}} parsed data\n *\n * @example\n * router.parse('#main/some/additional/data');\n * // execution result\n * {name: 'main', data: ['some', 'additional', 'data']}\n */\nrouter.parse = function ( hash ) {\n\tvar page = {\n\t\t\tname : '',\n\t\t\tdata : []\n\t\t};\n\n\t// get and decode all parts\n\tpage.data = hash.split('/').map(decodeURIComponent);\n\t// the first part is a page id\n\t// everything else is optional path\n\tpage.name = page.data.shift().slice(1);\n\n\treturn page;\n};\n\n\n/**\n * Convert the given page name and its data to url hash.\n *\n * @param {string} name page name\n * @param {string[]} [data=[]] page additional parameters\n *\n * @return {string} url hash\n *\n * @example\n * router.stringify('main', ['some', 'additional', 'data']);\n * // execution result\n * '#main/some/additional/data'\n */\nrouter.stringify = function ( name, data ) {\n\t// validation\n\tdata = Array.isArray(data) ? data : [];\n\n\t// encode all parts\n\tname = encodeURIComponent(name);\n\tdata = data.map(encodeURIComponent);\n\t// add encoded name to the beginning\n\tdata.unshift(name);\n\n\t// build an uri\n\treturn data.join('/');\n};\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nrouter.show = function ( page, data ) {\n\t// page available and can be hidden\n\tif ( page && !page.active ) {\n\t\t// apply visibility\n\t\tpage.$node.classList.add('active');\n\t\tpage.active  = true;\n\t\tthis.current = page;\n\n\t\t// there are some listeners\n\t\tif ( page.events['show'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tpage.emit('show', {page: page, data: data});\n\t\t}\n\n\t\tconsole.log('component ' + page.constructor.name + '.' + page.id + ' show', 'green');\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn false;\n};\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nrouter.hide = function ( page ) {\n\t// page available and can be hidden\n\tif ( page && page.active ) {\n\t\t// apply visibility\n\t\tpage.$node.classList.remove('active');\n\t\tpage.active  = false;\n\t\tthis.current = null;\n\n\t\t// there are some listeners\n\t\tif ( page.events['hide'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tpage.emit('hide', {page: page});\n\t\t}\n\n\t\tconsole.log('component ' + page.constructor.name + '.' + page.id + ' hide', 'grey');\n\n\t\treturn true;\n\t}\n\n\t// nothing was done\n\treturn false;\n};\n\n\n/**\n * Browse to a page with the given name.\n * Do nothing if the name is invalid. Otherwise hide the current, show new and update history.\n *\n * @param {string} name page id\n * @param {Array} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\nrouter.navigate = function ( name, data ) {\n\tvar pageFrom = this.current,\n\t\tpageTo   = this.ids[name];\n\n\tif ( DEBUG ) {\n\t\tif ( router.pages.length > 0 ) {\n\t\t\tif ( !pageTo || typeof pageTo !== 'object' ) { throw 'wrong pageTo type'; }\n\t\t\tif ( !('active' in pageTo) ) { throw 'missing field \"active\" in pageTo'; }\n\t\t}\n\t}\n\n\t// valid not already active page\n\tif ( pageTo && !pageTo.active ) {\n\t\tconsole.log('router.navigate: ' + name, pageTo === pageFrom ? 'grey' : 'green');\n\n\t\t// update url\n\t\tlocation.hash = this.stringify(name, data);\n\n\t\t// apply visibility\n\t\tthis.hide(this.current);\n\t\tthis.show(pageTo, data);\n\n\t\t// there are some listeners\n\t\tif ( this.events['navigate'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('navigate', {from: pageFrom, to: pageTo});\n\t\t}\n\n\t\t// store\n\t\tthis.history.push(pageTo);\n\n\t\treturn true;\n\t}\n\n\tconsole.log('router.navigate: ' + name, 'red');\n\n\t// nothing was done\n\treturn false;\n};\n\n\n/**\n * Go back one step in the history.\n * If there is no previous page, does nothing.\n *\n * @return {boolean} operation status\n */\nrouter.back = function () {\n\tvar pageFrom, pageTo;\n\n\tconsole.log('router.back', this.history.length > 1 ? 'green' : 'red');\n\n\t// there are some pages in the history\n\tif ( this.history.length > 1 ) {\n\t\t// remove the current\n\t\tpageFrom = this.history.pop();\n\n\t\t// new tail\n\t\tpageTo = this.history[this.history.length - 1];\n\n\t\t// valid not already active page\n\t\tif ( pageTo && !pageTo.active ) {\n\t\t\t// update url\n\t\t\tlocation.hash = pageTo.id;\n\n\t\t\t// apply visibility\n\t\t\tthis.hide(this.current);\n\t\t\tthis.show(pageTo);\n\n\t\t\t// there are some listeners\n\t\t\tif ( this.events['navigate'] !== undefined ) {\n\t\t\t\t// notify listeners\n\t\t\t\tthis.emit('navigate', {from: pageFrom, to: pageTo});\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// nothing was done\n\treturn false;\n};\n\n\n// public\nmodule.exports = router;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/router.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * Page is the main component to build user interface.\n * Page is an area filling the whole screen.\n * There can be only one active page visible at the same time.\n *\n * Active/visible state of a page is managed by the `router` module.\n *\n * A page can contain other components.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Component = require('../component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n\t/**\n\t * Page visibility/active state flag.\n\t *\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tthis.active = false;\n\n\t/**\n\t * Link to the currently active component with focus.\n\t *\n\t * @readonly\n\t * @type {Component}\n\t */\n\tthis.activeComponent = null;\n\n\t// sanitize\n\tconfig = config || {};\n\n\t// can't accept focus\n\tconfig.focusable = config.focusable || false;\n\n\t// parent init\n\tComponent.call(this, config);\n\n\t// correct CSS class names\n\tthis.$node.classList.add('page');\n\n\t// state flag\n\tthis.active = this.$node.classList.contains('active');\n\n\t// correct DOM parent/child connection if necessary\n\tif ( this.$node.parentNode === null ) {\n\t\tdocument.body.appendChild(this.$node);\n\t}\n\n\t// always itself\n\tthis.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n\n// public\nmodule.exports = Page;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/ui/page.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Model    = require('./model'),\n\trouter   = require('./router'),\n\tkeyCodes = {},\n\tapp, key;\n\n\n/**\n * @instance\n * @type {Model}\n */\napp = new Model({\n\t/**\n\t * Enable logging and debugging flag set by debug module at runtime.\n\t *\n\t * @type {boolean}\n\t */\n\tdebug: false,\n\n\t/**\n\t * Timestamps data.\n\t *\n\t * @type {Object}\n\t * @property {number} init application initialization time (right now)\n\t * @property {number} load document onload event\n\t * @property {number} done onload event sent and processed\n\t */\n\ttime: {\n\t\tinit: +new Date(),\n\t\tload: 0,\n\t\tdone: 0\n\t}\n});\n\n\n/**\n * The load event is fired when a resource and its dependent resources have finished loading.\n *\n * Control flow:\n *   1. Global handler.\n *   2. Each page handler.\n *   3. Application DONE event.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('load', function globalEventListenerLoad ( event ) {\n\tvar path;\n\n\tconsole.log(event);\n\n\t// time mark\n\tapp.data.time.load = event.timeStamp;\n\n\t// global handler\n\t// there are some listeners\n\tif ( app.events[event.type] !== undefined ) {\n\t\t// notify listeners\n\t\tapp.emit(event.type, event);\n\t}\n\n\t// local handler on each page\n\trouter.pages.forEach(function forEachPages ( page ) {\n\t\tconsole.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n\t\t// there are some listeners\n\t\tif ( page.events[event.type] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tpage.emit(event.type, event);\n\t\t}\n\t});\n\n\t// go to the given page if set\n\tif ( location.hash ) {\n\t\tpath = router.parse(location.hash);\n\t\trouter.navigate(path.name, path.data);\n\t}\n\n\t// time mark\n\tapp.data.time.done = +new Date();\n\n\t// everything is ready\n\t// and there are some listeners\n\tif ( app.events['done'] !== undefined ) {\n\t\t// notify listeners\n\t\tapp.emit('done', event);\n\t}\n});\n\n\n/**\n * The unload event is fired when the document or a child resource is being unloaded.\n *\n * Control flow:\n *   1. Each page handler.\n *   2. Global handler.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('unload', function globalEventListenerUnload ( event ) {\n\tconsole.log(event);\n\n\t// global handler\n\t// there are some listeners\n\tif ( app.events[event.type] !== undefined ) {\n\t\t// notify listeners\n\t\tapp.emit(event.type, event);\n\t}\n\n\t// local handler on each page\n\trouter.pages.forEach(function forEachPages ( page ) {\n\t\t// there are some listeners\n\t\tif ( page.events[event.type] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tpage.emit(event.type, event);\n\t\t}\n\t});\n});\n\n\n///**\n// * The hashchange event is fired when the fragment identifier of the URL has changed (the part of the URL that follows the # symbol, including the # symbol).\n// * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/hashchange\n// */\n//window.addEventListener('hashchange', function globalEventListenerHashChange ( event ) {\n//\t//var page, data;\n//\n//\tconsole.log(event);\n//\trouter.emit('change');\n//\n//\t//debug.event(event);\n//\t//debug.inspect(event);\n//    //\n//\t//app.emit(event.type, event);\n//\n//\t//app.parseHash();\n//\n////\tdata = document.location.hash.split('/');\n////\n////\t// the page is given\n////\tif ( data.length > 0 && (page = decodeURIComponent(data.shift().slice(1))) ) {\n////\t\t// the page params are given\n////\t\tif ( data.length > 0 ) {\n////\t\t\tdata = data.map(decodeURIComponent);\n////\t\t}\n////\n////\t\tapp.emit(event.type, {page: page, data: data});\n////\t}\n//});\n\n\n/**\n * The error event is fired when a resource failed to load.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('error', function globalEventListenerError ( event ) {\n\tconsole.log(event);\n});\n\n\nfunction globalEventListenerKeydown ( event ) {\n\tvar page = router.current;\n\n\tif ( DEBUG ) {\n\t\tif ( page === null || page === undefined ) { throw 'app should have at least one page'; }\n\t}\n\n\t// filter phantoms\n\tif ( event.keyCode === 0 ) { return; }\n\n\t// combined key code\n\tevent.code = event.keyCode;\n\n\t// apply key modifiers\n\tif ( event.shiftKey ) { event.code += 1000; }\n\tif ( event.altKey )   { event.code += 2000; }\n\n\tconsole.log(event);\n\n\t// current component handler\n\tif ( page.activeComponent && page.activeComponent !== page ) {\n\t\t// component is available and not page itself\n\t\tif ( page.activeComponent.events[event.type] !== undefined ) {\n\t\t\t// there are some listeners\n\t\t\tpage.activeComponent.emit(event.type, event);\n\t\t}\n\t}\n\n\t// page handler\n\tif ( !event.stop ) {\n\t\t// not prevented\n\t\tif ( page.events[event.type] !== undefined ) {\n\t\t\t// there are some listeners\n\t\t\tpage.emit(event.type, event);\n\t\t}\n\t}\n\n\t// global app handler\n\tif ( !event.stop ) {\n\t\t// not prevented\n\t\tif ( app.events[event.type] !== undefined ) {\n\t\t\t// there are some listeners\n\t\t\tapp.emit(event.type, event);\n\t\t}\n\t}\n\n\t// suppress non-printable keys in stb device (not in your browser)\n\tif ( app.data.host && keyCodes[event.code] && event.preventDefault ) {\n\t\tevent.preventDefault();\n\t}\n}\n\n\n/**\n * The keydown event is fired when a key is pressed down.\n * Set event.stop to true in order to prevent bubbling.\n *\n * Control flow:\n *   1. Current active component on the active page.\n *   2. Current active page itself.\n *   3. Application.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('keydown', globalEventListenerKeydown);\n\n\n/**\n * The keypress event is fired when press a printable character.\n * Delivers the event only to activeComponent at active page.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n *\n * @param {Event} event generated object with event data\n * @param {string} event.char entered character\n */\nwindow.addEventListener('keypress', function ( event ) {\n\tvar page = router.current;\n\n\tif ( DEBUG ) {\n\t\tif ( page === null || page === undefined ) { throw 'app should have at least one page'; }\n\t}\n\n\t//debug.event(event);\n\n\t// current component handler\n\tif ( page.activeComponent && page.activeComponent !== page ) {\n\t\t// component is available and not page itself\n\t\tif ( page.activeComponent.events[event.type] !== undefined ) {\n\t\t\t// there are some listeners\n\t\t\tpage.activeComponent.emit(event.type, event);\n\t\t}\n\t}\n});\n\n\n/**\n * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('click', function globalEventListenerClick ( event ) {\n\tconsole.log(event);\n});\n\n\n/**\n * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n *\n * @param {Event} event generated object with event data\n */\nwindow.addEventListener('contextmenu', function globalEventListenerContextmenu ( event ) {\n\tvar kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n\tconsole.log(event);\n\n\tkbEvent.type    = 'keydown';\n\tkbEvent.keyCode = 8;\n\n\t//debug.log(kbEvent.type);\n\n\tglobalEventListenerKeydown(kbEvent);\n\t//var event = document.createEvent('KeyboardEvent');\n\t//event.initEvent('keydown', true, true);\n\n\t//document.dispatchEvent(kbEvent);\n\n\t//if ( !DEBUG ) {\n\t// disable right click in release mode\n\tevent.preventDefault();\n\t//}\n});\n\n\n///**\n// * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n// * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n// */\n//window.addEventListener('wheel', function globalEventListenerWheel ( event ) {\n//\tvar page = router.current;\n//\n//\tdebug.event(event);\n//\n//\tevent.preventDefault();\n//\tevent.stopPropagation();\n//\n//\t// local handler\n//\tif ( page ) {\n//\t\tif ( page.activeComponent && page.activeComponent !== page ) {\n//\t\t\tpage.activeComponent.emit(event.type, event);\n//\t\t}\n//\n//\t\tif ( !event.stop ) {\n//\t\t\t// not prevented\n//\t\t\tpage.emit(event.type, event);\n//\t\t}\n//\t}\n//});\n\n\n// public\nmodule.exports = app;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/app.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n\tvar node = null,\n\t\ti, name;\n\n\t// minimal param is given\n\tif ( tagName ) {\n\t\t// empty element\n\t\tnode = document.createElement(tagName);\n\n\t\t// optional attribute list is given\n\t\tif ( attrList && typeof attrList === 'object' ) {\n\t\t\tfor ( name in attrList ) {\n\t\t\t\t// extend a new node with the given attributes\n\t\t\t\tnode[name] = attrList[name];\n\t\t\t}\n\t\t}\n\n\t\t// content (arguments except the first two)\n\t\tfor ( i = 2; i < arguments.length; i++ ) {\n\t\t\t// some data is given\n\t\t\tif ( arguments[i] ) {\n\t\t\t\t// regular HTML tag or plain data\n\t\t\t\tnode.appendChild(\n\t\t\t\t\ttypeof arguments[i] === 'object' ?\n\t\t\t\t\t\targuments[i] :\n\t\t\t\t\t\tdocument.createTextNode(arguments[i])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n\t// prepare placeholder\n\tvar i, fragment = document.createDocumentFragment();\n\n\t// walk through all the given elements\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tnode = arguments[i];\n\t\t// some data is given\n\t\tif ( node ) {\n\t\t\t// regular HTML tag or plain data\n\t\t\tfragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n\t\t}\n\t}\n\n\treturn fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n\tvar i;\n\n\t// valid HTML tag as the destination\n\tif ( tagDst instanceof Node ) {\n\t\t// append all except the first one\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t// some data is given\n\t\t\tif ( arguments[i] ) {\n\t\t\t\t// regular HTML tag or plain data\n\t\t\t\ttagDst.appendChild(\n\t\t\t\t\ttypeof arguments[i] === 'object' ?\n\t\t\t\t\t\targuments[i] :\n\t\t\t\t\t\tdocument.createTextNode(arguments[i])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn tagDst;\n\t}\n\n\treturn null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n\tvar count = 0,  // amount of successfully removed nodes\n\t\ti;\n\n\t// walk through all the given elements\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t// valid non-empty tag\n\t\tif ( arguments[i] && arguments[i].parentNode ) {\n\t\t\tif ( arguments[i].parentNode.removeChild(arguments[i]) === arguments[i] ) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn arguments.length > 0 && count === arguments.length;\n};\n\n\n// public\nmodule.exports = dom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/dom.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Emitter = require('./emitter');\n\n\n/**\n * Base model implementation.\n *\n * Represents domain-specific data or information that an application will be working with.\n * A typical example is a user account (e.g name, avatar, e-mail) or a music track (e.g title, year, album).\n * Holds information, but don’t handle behaviour and don’t format information or influence how data appears.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [data={}] init attributes\n */\nfunction Model ( data ) {\n\tif ( DEBUG ) {\n\t\tif ( data !== undefined && typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// parent init\n\tEmitter.call(this);\n\n\t/**\n\t * Model attributes with given data or empty hash table.\n\t *\n\t * @member {Object.<string, *>}\n\t **/\n\tthis.data = data || {};\n}\n\n\n// inheritance\nModel.prototype = Object.create(Emitter.prototype);\nModel.prototype.constructor = Model;\n\n\n// which of data fields is primary\nModel.prototype.idName = 'id';\n\n\n/**\n * Remove all attributes from the model.\n *\n * @return {boolean} operation status\n *\n * @fires Model#clear\n */\nModel.prototype.clear = function () {\n\tvar data = this.data;\n\n\tif ( DEBUG ) {\n\t\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// is there any data?\n\tif ( Object.keys(data).length > 0 ) {\n\t\t// reset\n\t\tthis.data = {};\n\n\t\t// there are some listeners\n\t\tif ( this.events['clear'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('clear', {data: data});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Clear and set model data.\n *\n * @param {Object} data attributes\n * @return {boolean} operation status\n *\n * @fires Model#clear\n * @fires Model#init\n */\nModel.prototype.init = function ( data ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t}\n\n\t// valid input\n\tif ( data ) {\n\t\t// reset data\n\t\tthis.clear();\n\n\t\t// init with given data\n\t\tthis.data = data;\n\n\t\t// there are some listeners\n\t\tif ( this.events['init'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('init', {data: data});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Check an attribute existence.\n *\n * @param {string} name attribute\n *\n * @return {boolean} attribute exists or not\n */\nModel.prototype.has = function ( name ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\t// hasOwnProperty method is not available directly in case of Object.create(null)\n\t//return Object.hasOwnProperty.call(this.data, name);\n\treturn this.data.hasOwnProperty(name);\n};\n\n/**\n * Get the model attribute by name.\n *\n * @param {string} name attribute\n *\n * @return {*} associated value\n */\nModel.prototype.get = function ( name ) {\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\treturn this.data[name];\n};\n\n\n/**\n * Update or create a model attribute.\n *\n * @param {string} name attribute\n * @param {*} value associated value\n * @return {boolean} operation status (true - attribute value was changed/created)\n *\n * @fires Model#change\n */\nModel.prototype.set = function ( name, value ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData  = {name: name, curr: value};\n\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\tif ( isAttrSet ) {\n\t\t// update\n\t\temitData.prev = this.data[name];\n\t\t// only if values are different\n\t\tif ( value !== emitData.prev ) {\n\t\t\tthis.data[name] = value;\n\n\t\t\t// there are some listeners\n\t\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t\t// notify listeners\n\t\t\t\tthis.emit('change', emitData);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\t// create\n\t\tthis.data[name] = value;\n\n\t\t// there are some listeners\n\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('change', emitData);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Delete the given attribute by name.\n *\n * @param {string} name attribute\n * @return {boolean} operation status (true - attribute was deleted)\n *\n * @fires Model#change\n */\nModel.prototype.unset = function ( name ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData;\n\n\tif ( DEBUG ) {\n\t\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t}\n\n\tif ( isAttrSet ) {\n\t\temitData = {name: name, prev: this.data[name]};\n\t\tdelete this.data[name];\n\n\t\t// there are some listeners\n\t\tif ( this.events['change'] !== undefined ) {\n\t\t\t// notify listeners\n\t\t\tthis.emit('change', emitData);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n///**\n// * Prepare all data for sending to a server\n// * @return {Object}\n// */\n//Model.prototype.pack = function () {\n//\treturn this._data;\n//};\n//\n//\n///**\n// * Restores the received data from a server to a model data\n// * @param {Object} data\n// * @return {Object}\n// */\n//Model.prototype.unpack = function ( data ) {\n//\treturn data;\n//};\n//\n//\n///**\n// * Sync model to a server\n// */\n//Model.prototype.save = function () {\n//\tvar self = this;\n//\n//\tif ( this.url ) {\n//\t\t// collect data\n//\t\tio.ajax(this.url, {\n//\t\t\t// request params\n//\t\t\tmethod: self._data[self.idName] ? 'put' : 'post',\n//\t\t\tdata  : self.pack(),\n//\t\t\tonload: function( data ) {\n//\t\t\t\tdata = self.unpack(self.parse(data));\n//\t\t\t\tself.attributes(data);\n//\t\t\t\tconsole.log(data);\n//\t\t\t\tself.emit('save', true);\n//\t\t\t},\n//\t\t\t// error handlers\n//\t\t\tonerror:   this.saveFailure,\n//\t\t\tontimeout: this.saveFailure\n//\t\t});\n//\t}\n//};\n//\n//\n///**\n// * Error handler while model data fetch\n// */\n//Model.prototype.saveFailure = function () {\n//\tthis.emit('save', false);\n//};\n//\n//\n///**\n// * Converts received data from a server to a model attributes\n// * @param {String} response\n// * @return {Object}\n// */\n//Model.prototype.parse = function ( response ) {\n//\tvar data = {};\n//\n//\ttry {\n//\t\tdata = JSON.parse(response).data;\n//\t} catch(e){ console.log(e); }\n//\treturn data;\n//};\n\n\n// public export\nmodule.exports = Model;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/model.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * @module stb/ui/button\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Component = require('../component');\n\n\n/**\n * Base button implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon=false] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     button = new Button({\n *         $node: document.getElementById(id),\n *         icon: 'menu'\n *         value: 'Apply changes'\n *     });\n */\nfunction Button ( config ) {\n\t// current execution context\n\tvar self = this;\n\n\t// sanitize\n\tconfig = config || {};\n\n\t// parent init\n\tComponent.call(this, config);\n\n\t// correct CSS class names\n\tthis.$node.classList.add('button');\n\n\t// not a custom content\n\tif ( this.$node === this.$body ) {\n\t\t// so everything should be prepared here\n\n\t\tif ( config.icon ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( typeof config.icon !== 'string' || config.icon.length === 0 ) { throw 'wrong or empty config.icon'; }\n\t\t\t}\n\n\t\t\t// insert icon\n\t\t\tthis.$icon = this.$node.appendChild(document.createElement('div'));\n\t\t\tthis.$icon.className = 'icon ' + config.icon;\n\t\t}\n\n\t\tif ( config.value !== undefined ) {\n\t\t\tif ( DEBUG ) {\n\t\t\t\tif ( typeof config.value !== 'string' || config.value.length === 0 ) { throw 'wrong or empty config.value'; }\n\t\t\t}\n\n\t\t\t// insert caption placeholder\n\t\t\tthis.$body = this.$node.appendChild(document.createElement('div'));\n\t\t\tthis.$body.classList.add('text');\n\t\t\t// fill it\n\t\t\tthis.$body.innerText = config.value;\n\t\t}\n\t}\n\n\tthis.addListener('keydown', function ( event ) {\n\t\tif ( event.code === 13 ) {\n\t\t\t// there are some listeners\n\t\t\tif ( self.events['click'] !== undefined ) {\n\t\t\t\t/**\n\t\t\t\t * Mouse click event emulation.\n\t\t\t\t *\n\t\t\t\t * @event module:stb/ui/button~Button#click\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t * @property {Event} event click event data\n\t\t\t\t */\n\t\t\t\tself.emit('click', {event: event});\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.addListener('click', function () {\n\t\t//console.log(this);\n\t\tself.$node.classList.add('click');\n\t\tsetTimeout(function () {\n\t\t\tself.$node.classList.remove('click');\n\t\t}, 200);\n\t});\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n\n// public\nmodule.exports = Button;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/ui/button.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * @module stb/ui/panel\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Component = require('../component');\n\n\n/**\n * Base panel implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Panel = require('stb/ui/panel'),\n *     panel = new Panel({\n *         $node: document.getElementById('someId'),\n *         children: [\n *             new Panel({\n *                 $node: document.getElementById('anotherId')\n *             })\n *         ]\n *     });\n *\n * panel.add(\n *     new Button(),\n *     new Button(),\n *     new Button()\n * );\n *\n * page.add(panel);\n */\nfunction Panel ( config ) {\n\t// sanitize\n\tconfig = config || {};\n\n\t// can't accept focus\n\tconfig.focusable = config.focusable || false;\n\n\t// parent init\n\tComponent.call(this, config);\n\n\t// correct CSS class names\n\tthis.$node.classList.add('panel');\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n\n// public\nmodule.exports = Panel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/lib/ui/panel.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Main application entry point.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app    = require('./lib/app'),\n\trouter = require('./lib/router');\n\n\napp.addListeners({\n\t// all resources are loaded\n\tload: function load () {\n\t\t// set pages\n\t\trouter.init([\n\t\t\trequire('./pages/init'),\n\t\t\trequire('./pages/account'),\n\t\t\trequire('./pages/main')\n\t\t\t//require('./pages/help')\n\t\t]);\n\t},\n\n\t// everything is ready\n\tdone: function done () {\n\t\t// go to the main page\n\t\trouter.navigate('pageAccount');\n\t},\n\n\t// event\n\tkeydown: function keydown ( event ) {\n\t\tif ( event.code === keys.back ) {\n\t\t\trouter.back();\n\t\t}\n\t}\n});\n\n\n//var aes    = require('./aes'),\n//\tapi    = require('./api'),\n//\tconfig = require('./config'),\n//\tpages  = require('./pages'),\n//\tNotes  = require('./collection.notes.js');\n//\n//\n//// authenticated?\n//if ( config.apiKey ) {\n//\t// it appears the user is logged in but validation is required\n//\tapi.put('sessions/' + config.apiKey, function(err, response){\n//\t\tvar pass;\n//\t\t// session is valid\n//\t\tif ( response.code === 1 ) {\n//\t\t\tconsole.log('%c%s %o', 'color:green', 'session is valid, last access time:', new Date(response.atime));\n//\t\t\tpages.list.show();\n//\n//\t\t\t// apply saved pass salt and hash\n//\t\t\taes.salt = localStorage.getItem('config.pass.salt');\n//\t\t\taes.hash = localStorage.getItem('config.pass.hash');\n//\n//\t\t\t// ask a user pass and check it\n//\t\t\tpass = window.prompt('Provide your password to unlock data', '');\n//\t\t\tif ( pass && aes.checkPass(pass) ) {\n//\t\t\t\taes.setPass(pass);\n//\t\t\t\tconsole.log('%c%s', 'color:blue', 'pass is valid');\n//\n//\t\t\t\t// collect all sessions info\n//\t\t\t\tapi.get('sessions', function ( err, response ) {\n//\t\t\t\t\tif ( response.code === 1 ) {\n//\t\t\t\t\t\tresponse.data.forEach(function ( session ) {\n//\t\t\t\t\t\t\tconsole.log('session', new Date(session.atime), session._id, JSON.parse(aes.decrypt(session.data)));\n//\t\t\t\t\t\t});\n//\t\t\t\t\t}\n//\t\t\t\t});\n//\n//\t\t\t\tvar notes = new Notes();\n//\t\t\t\tnotes.addListener('fetch', function(status){\n//\t\t\t\t\tconsole.log('notes fetch', status);\n//\t\t\t\t});\n//\t\t\t\tnotes.fetch();\n//\t\t\t\tconsole.log(notes);\n//\t\t\t} else {\n//\t\t\t\tconsole.log('%c%s', 'color:red', 'pass is invalid');\n//\t\t\t\treturn;\n//\t\t\t}\n//\t\t} else {\n//\t\t\t// authentication has expired\n//\t\t\tpages.auth.show();\n//\t\t\tconsole.log('%c%s', 'color:red', 'session is invalid, need to login');\n//\t\t\tlocalStorage.clear();\n//\t\t\treturn;\n//\t\t}\n//\t});\n//\n//\n//\n//\t/*\n//\tapi.get('sessions/' + config.apiKey, function(err, response){\n//\tconsole.log('current session', response);\n//\tconsole.log('current session data', JSON.parse(aes.decrypt(response.data.data)));\n//\t});/**/\n//} else {\n//\tpages.auth.show();\n//}\n//\n//localStorage.setItem('debug', 1);\n\n//app.init();\n\n// test data\n//aes.salt = '0fb449e1ae2dc62c11f64a415e66610fa7945ce62033866788db5cc0e2ffb0da';\n//aes.setPass('qwerty');\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Page to add new user account.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id     = 'pageAccount',\n\tPage   = require('../lib/ui/page'),\n\tPanel  = require('../lib/ui/panel'),\n\tButton = require('../lib/ui/button'),\n\tpage   = new Page({$node: document.getElementById(id)}),\n\t//wizard = new Panel({\n\t//\t$node: document.getElementById('pageAccountWizard')\n\t//\t//visible: false\n\t//}),\n\tstep1  = new Panel({\n\t\t$node: document.getElementById('pageAccountStep1'),\n\t\t//visible: false\n\t\tchildren: [\n\t\t\tnew Button({\n\t\t\t\t$node: document.getElementById('pageAccountStep1Next'),\n\t\t\t\t//icon: 'menu',\n\t\t\t\tvalue: 'Continue'\n\t\t\t})\n\t\t]\n\t}),\n\tstep2  = new Panel({\n\t\t$node: document.getElementById('pageAccountStep2'),\n\t\tvisible: false\n\t}),\n\tstep3  = new Panel({\n\t\t$node: document.getElementById('pageAccountStep3'),\n\t\tvisible: false\n\t});\n\n\npage.addListener('load', function load () {\n\t//console.log(wizard);\n});\n\n\npage.addListener('show', function show () {\n\t// initial active component\n\tif ( !page.activeComponent ) {\n\t\t//page.menu.focus();\n\t}\n});\n\n\n// public\nmodule.exports = page;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/pages/account.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Loading page.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id   = 'pageInit',\n\tPage = require('../lib/ui/page'),\n\tpage = new Page({$node: document.getElementById(id)});\n\n\n// public\nmodule.exports = page;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/pages/init.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Main page.\n *\n * @author DarkPark\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id   = 'pageMain',\n\t//List = require('stb/ui/list'),\n\tPage = require('../lib/ui/page'),\n\tpage = new Page({$node: document.getElementById(id)});\n\n\npage.addListener('load', function load () {\n\t//var menuData = [\n\t//\t\t{\n\t//\t\t\tvalue: 'Panel',\n\t//\t\t\tpanel: require('../tabs/main.panel')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Button',\n\t//\t\t\tpanel: require('../tabs/main.button')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Input',\n\t//\t\t\tpanel: require('../tabs/main.input')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'CheckBox',\n\t//\t\t\tpanel: require('../tabs/main.check.box')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Grid',\n\t//\t\t\tpanel: require('../tabs/main.grid')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'List',\n\t//\t\t\tpanel: require('../tabs/main.list')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'ProgressBar',\n\t//\t\t\tpanel: require('../tabs/main.progress.bar')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Page',\n\t//\t\t\tpanel: require('../tabs/main.page')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Modal',\n\t//\t\t\tpanel: require('../tabs/main.modal')\n\t//\t\t},\n\t//\t\t{\n\t//\t\t\tvalue: 'Widget',\n\t//\t\t\tpanel: require('../tabs/main.widget')\n\t//\t\t}\n\t//\t];\n\t//\n\t//// attach to page\n\t//menuData.forEach(function ( item ) {\n\t//\tpage.add(item.panel);\n\t//});\n\t//\n\t//page.add(\n\t//\tpage.menu = new List({\n\t//\t\t$node: document.getElementById('pageMainMenu'),\n\t//\t\tdata: menuData,\n\t//\t\tfocusIndex: 0,\n\t//\t\tsize: 10,\n\t//\t\tcycle: true,\n\t//\t\trender: function ( $item, data ) {\n\t//\t\t\t$item.textContent = data.value;\n\t//\t\t},\n\t//\t\tevents: {\n\t//\t\t\t/*click: function ( data ) {\n\t//\t\t\t\t//console.log('click');\n\t//\t\t\t\t//data.event.stop = true;\n\t//\t\t\t\t//debug.inspect(data, 1);\n\t//\t\t\t},\n\t//\t\t\tfocus: function ( data ) {\n\t//\t\t\t\t//console.log('focus');\n\t//\t\t\t\t//debug.inspect(data, 1);\n\t//\t\t\t},\n\t//\t\t\t'click:item': function ( data ) {\n\t//\t\t\t\t//console.log('click:item');\n\t//\t\t\t\t//debug.inspect(data, 1);\n\t//\t\t\t},*/\n\t//\t\t\t'focus:item': function ( data ) {\n\t//\t\t\t\t//console.log('focus:item');\n\t//\t\t\t\t//debug.inspect(data, 1);\n\t//\t\t\t\tif ( data.$prev ) {\n\t//\t\t\t\t\tdata.$prev.data.panel.hide();\n\t//\t\t\t\t}\n\t//\t\t\t\tdata.$curr.data.panel.show();\n\t//\t\t\t}\n\t//\t\t\t/*'blur:item': function ( data ) {\n\t//\t\t\t\t//console.log('blur:item');\n\t//\t\t\t\t//debug.inspect(data, 1);\n\t//\t\t\t}*/\n\t//\t\t}\n\t//\t})\n\t//\t//page.body = new Panel({$node: document.getElementById('pageMainBody')})\n\t//);\n\t//\n\t//page.focusable = false;\n\t//page.addListener('click', function ( data ) {\n\t//\tdata.event.stop = true;\n\t//});\n});\n\n\npage.addListener('show', function show () {\n\t// initial active component\n\tif ( !page.activeComponent ) {\n\t\t//page.menu.focus();\n\t}\n});\n\n\n// public\nmodule.exports = page;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/pages/main.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}